<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springlec.base.dao.admin.OrdersDao">

	<!-- 매출액(월간) 가져오기 admin_main.do -->
	<select id="searchmonthSales"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT SUM(o.count*m.price) AS monthSales
		FROM orders o
		JOIN
		manage m ON o.pcode = m.pcode
		WHERE YEAR(o.orderdate) =
		YEAR(CURRENT_DATE())
		AND MONTH(o.orderdate) = MONTH(CURRENT_DATE())
		AND
		o.refunddate IS NULL
	</select>

	<!-- 매출액(연간) 가져오기 admin_main.do -->
	<select id="searchyearSalessolo"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT SUM(o.count*m.price) AS yearSales
		FROM orders o
		JOIN
		manage m ON o.pcode = m.pcode
		WHERE YEAR(o.orderdate) =
		YEAR(CURRENT_DATE())
		AND o.refunddate IS NULL
	</select>

	<!-- 전체 오더갯수 가져오기 admin_main.do -->
	<select id="searchordersHowmany"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT COUNT(ordercode) AS count
		FROM orders o
		WHERE
		YEAR(o.orderdate) = YEAR(CURRENT_DATE())
		AND
		MONTH(o.orderdate) =
		MONTH(CURRENT_DATE())
		AND refunddate IS NULL
	</select>

	<!-- 할일 갯수 가져오기 admin_main.do -->
	<select id="searchtodo"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT COUNT(ordercode) AS toDo
		FROM orders
		WHERE refunddate
		IS NOT NULL
		AND deliverydate IS NULL
	</select>

	<!--매출액그래프 가져오기 admin_main.do -->
	<select id="searchyearsales"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT
		DATE_FORMAT(
		DATE_ADD(CONCAT(YEAR(CURDATE()),
		'-01-01'), INTERVAL dates.date - 1 MONTH),
		'%c월'
		) AS month,
		COALESCE(SUM(IFNULL(o.count * m.price, 0)), 0) AS totalsales
		FROM
		(
		SELECT 1 AS date UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL
		SELECT 4
		UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION
		ALL
		SELECT 8
		UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL SELECT 11
		UNION ALL SELECT
		12
		) dates
		LEFT JOIN orders o ON MONTH(o.orderdate) =
		dates.date AND o.refunddate IS
		NULL
		LEFT JOIN manage m ON o.pcode =
		m.pcode
		GROUP BY
		dates.date
		ORDER BY
		dates.date
	</select>

	<!-- 오더관련 모든 정보 불러오기 : searchOrders.do -->
	<select id="searchOrders"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT * FROM orders o
	</select>

	<!-- 하나의 오더코드관련 모든 정보 불러오기 : searchOrders.do -->
	<select id="searchupdate"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT *
		FROM orders
		WHERE ordercode = #{ordercode}
	</select>


	<!-- 환불 확인 정보 넣기 : admin_updateorders_checked.do -->
	<update id="refundupdate">
		UPDATE orders
		SET refunddate = now()
		WHERE ordercode =
		#{ordercode}
	</update>

	<!-- 배송 확인 정보 넣기 : admin_updateorders_checked.do -->
	<update id="deliveryupdate">
		UPDATE orders
		SET deliverydate = now()
		WHERE ordercode
		= #{ordercode}
	</update>

	<select id="searchWeekorders"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT
		DATE(dates.date) AS orderdate,
		IFNULL(COUNT(orders.orderdate), 0) AS count
		FROM
		(SELECT
		CURDATE() -
		INTERVAL (a.a + (10 * b.a) + (100 * c.a)) DAY AS date
		FROM
		(SELECT 0 AS
		a UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL
		SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7
		UNION ALL SELECT 8 UNION ALL SELECT 9) AS a
		CROSS JOIN
		(SELECT 0 AS a
		UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL
		SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7
		UNION ALL SELECT 8 UNION ALL SELECT 9) AS b
		CROSS JOIN
		(SELECT 0 AS a
		UNION ALL SELECT 1 UNION ALL SELECT 2 UNION ALL SELECT 3 UNION
		ALL
		SELECT 4 UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7
		UNION ALL SELECT 8 UNION ALL SELECT 9) AS c
		) AS dates
		LEFT JOIN
		orders
		ON DATE(dates.date) = DATE(orderdate)
		WHERE
		dates.date >= CURDATE() -
		INTERVAL 1 WEEK
		AND orders.refunddate IS NULL
		GROUP BY
		dates.date
		ORDER BY
		dates.date ASC
	</select>
	<select id="searchEmail"
		resultType="com.springlec.base.model.admin.OrdersDto">
		SELECT
		orders.ordercode,
		product.name,
		orders.address,
		orders.count,
		user.email,
		orders.deliverydate
		FROM
		orders
		JOIN
		product ON
		product.pcode = orders.pcode
		JOIN
		user ON user.userid = orders.userid
		WHERE
		orders.ordercode = #{ordercode};
	</select>




</mapper>